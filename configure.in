#
# Project   : tin - a Usenet reader
# Module    : configure.in
# Author    : Thomas E. Dickey <dickey@clark.net>
# Created   : 
# Updated   : 29.05.96
# Notes     : 
# Copyright : 
#

dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.0)
AC_INIT(include/tin.h)
AC_CONFIG_HEADER(include/autoconf.h:include/autoconf.hin)
AC_PREFIX_DEFAULT(/usr/local)

###	Checks for programs.
save_CFLAGS="$CFLAGS"
AC_PROG_CC
AC_PROG_GCC_TRADITIONAL
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_YACC

AC_PATH_PROG(PATH_UNAME,uname)
test -n "$PATH_UNAME" && AC_DEFINE(HAVE_UNAME)

AC_PATH_PROG(PATH_ISPELL,ispell)
test -n "$PATH_ISPELL" && AC_DEFINE(HAVE_ISPELL)

AC_PATH_PROG(PATH_METAMAIL,metamail)
test -n "$PATH_METAMAIL" && AC_DEFINE(HAVE_METAMAIL)

AC_PATH_PROG(PATH_PGP,pgp)
test -n "$PATH_PGP" && AC_DEFINE(HAVE_PGP)


###	use option --enable-debug to compile-in test/development code
AC_ARG_ENABLE(debug,
	[  --enable-debug          turn on debug/profiling/traces],
	[with_debug=$enableval],
	[with_debug=no])
if test $with_debug = no; then
	if test -z "$save_CFLAGS"; then
		CFLAGS=`echo $CFLAGS|sed -e 's/-g //'`
	fi
fi

###	use option --disable-echo to suppress full display compiling commands
AC_ARG_ENABLE(echo,
	[  --enable-echo           display \"compiling\" commands (default)],
	[with_echo=$enableval],
	[with_echo=yes])
if test $with_echo = yes; then
	SHOW_CC='# compiling'
	ECHO_CC=''
else
	SHOW_CC='	@echo compiling $@'
	ECHO_CC='@'
fi
AC_SUBST(SHOW_CC)
AC_SUBST(ECHO_CC)

### use option --enable-prototypes to turn on optional prototypes
AC_ARG_ENABLE(prototypes,
	[  --enable-prototypes     check for optional prototypes],
	[with_decl_check=$enableval],
	[with_decl_check=no])

###	use option --enable-warnings to turn on all gcc warnings
AC_ARG_ENABLE(warnings,
	[  --enable-warnings       turn on GCC compiler warnings],
	[with_warnings=$enableval])
if test -n "$GCC"
then
	# gcc 2.5.8 doesn't recognize some other useful options that could
	# be configured if you have gcc 2.6.3:
	# -Wbad-function-cast
	# -Wmissing-declarations
	#
	# We should also use
	# -Wshadow
	if test -n "$with_warnings"
	then
		CFLAGS="$CFLAGS -Wall -Winline -Wstrict-prototypes -Wmissing-prototypes"
	fi
fi

## options for directories
AC_ARG_WITH(libdir,
	[  --with-libdir=PATH      news-library (default: /usr/lib/news)],
	[LIBDIR=$withval],
	[LIBDIR=/usr/lib/news])
AC_SUBST(LIBDIR)

AC_ARG_WITH(spooldir,
	[  --with-spooldir=PATH    spool directory (default: /usr/spool/news)],
	[SPOOLDIR=$withval],
	[SPOOLDIR=/usr/spool/news])
AC_SUBST(SPOOLDIR)

## options for libraries (FIXME: this should be automatic)
AC_ARG_WITH(inn-nntplib,
	[  --with-inn-nntplib=PATH specify INN-NNTP library],
	[AC_DEFINE(USE_INN_NNTPLIB)
	 INN_NNTPLIB=$withval
	 AC_SUBST(INN_NNTPLIB)])

## options for miscellaneous definitions
AC_ARG_WITH(mail-gateway,
	[  --with-mail-gateway     (default: empty)],
	[INEWS_MAIL_GATEWAY=$withval])
AC_SUBST(INEWS_MAIL_GATEWAY)

AC_ARG_WITH(mail-domain,
	[  --with-mail-domain      (default: akk.uni-karlsruhe.de)
	                  (sets INEWS_MAIL_DOMAIN)],
	[INEWS_MAIL_DOMAIN=$withval],
	[test -z "$INEWS_MAIL_DOMAIN" && INEWS_MAIL_DOMAIN="akk.uni-karlsruhe.de"])
AC_SUBST(INEWS_MAIL_DOMAIN)

AC_ARG_WITH(nntp-default-server,
	[  --with-nntp-default-server
                          (default: news\$INEWS_MAIL_DOMAIN)
                          (sets NNTP_DEFAULT_SERVER)],
	[NNTP_DEFAULT_SERVER=$withval],
	[test -z "$NNTP_DEFAULT_SERVER" && case "$INEWS_MAIL_DOMAIN" in #(((
	 /*)	NNTP_DEFAULT_SERVER="news`cat $INEWS_MAIL_DOMAIN`" ;;
	 .*)	NNTP_DEFAULT_SERVER="news$INEWS_MAIL_DOMAIN"       ;;
	 *)	NNTP_DEFAULT_SERVER="news.$INEWS_MAIL_DOMAIN"      ;;
	 esac])
AC_SUBST(NNTP_DEFAULT_SERVER)

## optional features
AC_MSG_CHECKING(whether to use MH style mail handling)
AC_ARG_ENABLE(mh-mail-handling,
	[  --enable-mh-mail-handling
                          (use MH style mail handling (default: off))],
	[ case "$enableval" in
	yes)
		AC_MSG_RESULT(yes)
		AC_DEFINE(HAVE_MH_MAIL_HANDLING)
		;;
	*)
		AC_MSG_RESULT(no)
		;;
	esac ],
	[ AC_MSG_RESULT(no) ]
)

AC_MSG_CHECKING(whether to be NNTP_ONLY)
AC_ARG_ENABLE(nntp-only,
	[  --enable-nntp-only
                          (reading via NNTP only (default: off))],
	[ case "$enableval" in
	yes)
		AC_MSG_RESULT(yes)
		AC_DEFINE(NNTP_ONLY)
		;;
	*)
		AC_MSG_RESULT(no)
		AC_DEFINE(NNTP_ABLE)
		;;
	esac ],
	[ AC_MSG_RESULT(no)
	  AC_DEFINE(NNTP_ABLE)]
)

AC_MSG_CHECKING(whether to enable ANSI-color)
AC_ARG_ENABLE(color,
	[  --enable-color
                          (ANSI-color support (default: on))],
	[ case "$enableval" in
	no)
		AC_MSG_RESULT(no)
		;;
	*)
		AC_MSG_RESULT(yes)
		AC_DEFINE(HAVE_COLOR)

		;;
	esac ],
	[ AC_MSG_RESULT(yes)
	  AC_DEFINE(HAVE_COLOR) ]
)

AC_MSG_CHECKING(whether to enable reference-based threading)
AC_ARG_ENABLE(ref-threading,
	[  --disable-ref-threading
                          (reference-based threading (default: on))],
	[ case "$enableval" in
	no)
		AC_MSG_RESULT(no)
		;;
	*)
		AC_MSG_RESULT(yes)
		AC_DEFINE(HAVE_REF_THREADING)
		;;
	esac ],
	[ AC_MSG_RESULT(yes)
	  AC_DEFINE(HAVE_REF_THREADING) ]
)

AC_MSG_CHECKING(whether to enable posting-etiquette)
AC_ARG_ENABLE(etiquette,
	[  --disable-etiquette
                          (print posting-etiquette (default: on))],
	[ case "$enableval" in
	no)
		AC_MSG_RESULT(no)
		AC_DEFINE(NO_ETIQUETTE)
		;;
	*)
		AC_MSG_RESULT(yes)
		;;
	esac ],
	[ AC_MSG_RESULT(yes) ]
)

AC_MSG_CHECKING(whether to strictly observe RFC1522 and break long lines)
AC_ARG_ENABLE(break-long-lines,
	[  --enable-break-long-lines
                          (break long mime-encoded lines (default: off))],
	[ case "$enableval" in
	yes)
		AC_MSG_RESULT(yes)
		AC_DEFINE(MIME_BREAK_LONG_LINES)
		;;
	*)
		AC_MSG_RESULT(no)
		;;
	esac ],
	[ AC_MSG_RESULT(no) ]
)

AC_MSG_CHECKING(whether to force MM_CHARSET obeyance when decoding mime)
AC_ARG_ENABLE(mime-strict-charset,
	[  --disable-mime-strict-charset
                          (force MM_CHARSET obeyance (default: on))],
	[ case "$enableval" in
	no)
		AC_MSG_RESULT(no)
		;;
	*)
		AC_MSG_RESULT(yes)
		AC_DEFINE(MIME_STRICT_CHARSET)
		;;
	esac ],
	[ AC_MSG_RESULT(yes)
	  AC_DEFINE(MIME_STRICT_CHARSET) ]
)

AC_MSG_CHECKING(whether to enable forged cancels)
AC_ARG_ENABLE(forgery,
	[  --enable-forgery
                          (forged cancel support (default: off))],
	[ case "$enableval" in
	yes)
		AC_MSG_RESULT(yes)
		AC_DEFINE(FORGERY)
		;;
	*)
		AC_MSG_RESULT(no)
		;;
	esac ],
	[ AC_MSG_RESULT(no) ]
)

###	checks for compiler characteristics
CF_MAKEFLAGS
AC_LANG_C
AC_C_CONST
AC_C_INLINE
CF_ANSI_ASSERT

###	Checks for header files.
AC_STDC_HEADERS
AC_HEADER_DIRENT
AC_HEADER_TIME
AC_CHECK_HEADERS(\
curses.h \
errno.h \
fcntl.h \
ioctl.h \
locale.h \
netdb.h \
netlib.h \
poll.h \
prototypes.h \
pwd.h \
stddef.h \
stdlib.h \
string.h \
strings.h \
stropts.h \
sys/bsdtypes.h \
sys/ioctl.h \
sys/param.h \
sys/ptem.h \
sys/pty.h \
sys/select.h \
sys/stream.h \
sys/time.h \
sys/times.h \
sys/utsname.h \
sys/wait.h \
termio.h \
time.h \
unistd.h \
)

# check for SCO.  this is a hack, and should be split into individual
# features -- the sys/time.h and select.h conflict, and the need for
# ptem.h due to winsize struct.
AC_CHECKING([for SCO by checking on /usr/bin/scosh])
AC_PROGRAM_CHECK(COULD_BE_SCO, [scosh], maybe, maybenot)
if test "$COULD_BE_SCO" = "maybe"
then
	AC_DEFINE(SYSTEM_LOOKS_LIKE_SCO)
fi

###	Checks for Datatypes.
AC_TYPE_SIZE_T
AC_TYPE_SIGNAL

###	Checks for libraries.
AC_CHECK_LIB(termlib, tgoto, [LIBS="$LIBS -ltermlib" termlib=found])
if test "$termlib" != found; then
	# allow curses library for broken AIX system.
	AC_CHECK_LIB(curses, initscr, [LIBS="$LIBS -lcurses" termlib=found])
	AC_CHECK_LIB(termcap, tgoto, [LIBS="$LIBS -ltermcap" termlib=found])
fi
if test "$termlib" != found; then
	AC_CHECK_LIB(termcap, tgoto, [LIBS="$LIBS -ltermcap" termlib=found])
fi
if test "$termlib" != found; then
	AC_WARN([Can't find -ltermlib, -lcurses, or -ltermcap])
fi

###	Checks for external-data
CF_ERRNO
CF_SYS_ERRLIST

###	Checks for library functions.
AC_CHECK_FUNCS(\
bcopy \
bfill \
bzero \
fork \
getcwd \
gethostbyname \
is_xterm \
memcmp \
memcpy \
memset \
mkdir \
poll \
rewinddir \
select \
setegid \
seteuid \
setgid \
setlocale \
setregid \
setreuid \
setuid \
sigaction \
strchr \
strerror \
strftime \
strtol \
tzset \
unlink \
)

CF_CHECK_DECL(\
getenv \
tgetstr \
)

if test $with_decl_check = yes; then
CF_CHECK_DECL(\
bcopy \
bzero \
fclose \
fflush \
fprintf \
fputc \
fputs \
fread \
fseek \
fwrite \
gethostname \
getopt \
ioctl \
memset \
mktemp \
pclose \
perror \
printf \
rewind \
select \
setegid \
seteuid \
setpgrp \
socket \
sscanf \
strftime \
strtol \
system \
time \
tolower \
toupper \
tputs \
_flsbuf \
)
fi

if test $ac_cv_func_sigaction = yes; then
AC_MSG_CHECKING(whether sigaction needs _POSIX_SOURCE)
AC_TRY_COMPILE([#include <sys/types.h>
#include <signal.h>], [struct sigaction act;],
  sigact_bad=no, sigact_bad=yes AC_DEFINE(SVR4_ACTION))
fi
AC_MSG_RESULT($sigact_bad)

CF_SET_GID_UID
CF_TYPE_SIGACTION
CF_TIOCGWINSZ
CF_TERMIOS
CF_TM_GMTOFF

CF_LONG_FILENAMES
CF_SIG_ARGS
if test -n "$GCC"; then
	CF_SIG_CONST
fi
CF_COMPTYPE
CF_COREFILE

AC_OUTPUT(makefile src/Makefile)
