# Source Makefile for tin - for configuration options read the ../INSTALL file.
#
SHELL		= /bin/sh
prefix		= @prefix@
exec_prefix	= @exec_prefix@
srcdir		= @srcdir@

# Compiler, linker & parser commands
CC	= @CC@

DEBUG	= @ENABLE_DEBUG@ -DDEBUG #-DDEBUG_NEWSRC -DPROFILE -DDEBUG_MIME -DDEBUG_REFS
CPPOPTS	= @DEFS@ -I$(INCDIR) $(DEBUG) @CPPFLAGS@
CFLAGS	= @CFLAGS@

CPROTO_OPTS = -e -m $(CPPOPTS) -DFORGERY -DHAVE_COLOR -DHAVE_REF_THREADING

LD	= $(CC)
LDFLAGS	= @LDFLAGS@
YACC	= @YACC@

LIBS	= @LIBS@ @INN_NNTPLIB@

# Where do you want the binary & manual page installed?
INS_BINARY_DIR	= @bindir@
INS_DAEMON_DIR	= @NEWSLIBDIR@
INS_MANUAL_DIR	= @mandir@/man
INS_MANUAL_EXT	= 1

# Project
PROJECT	= tin
EXE	= tin
EXED	= tind
VER	= 1.30
MANEXT	= 1

# directory structure
DOCDIR	= ../doc
INCDIR	= $(srcdir)/../include
BINDIR	= .
OBJDIR	= .
SRCDIR	= $(srcdir)

# standard commands
CFLOW	= cflow
CP	= cp
CHMOD	= chmod
CPROTO	= cproto
CSCOPE	= cscope
ECHO	= echo
LINT	= lint
LN	= ln
LS	= ls -l
MAKE	= make
MV	= mv
RM	= rm
TAGS	= ctags
INSTALL	= @INSTALL@

HFILES	= \
	$(INCDIR)/autoconf.h \
	$(INCDIR)/conf.h \
	$(INCDIR)/extern.h \
	$(INCDIR)/menukeys.h \
	$(INCDIR)/nntplib.h \
	$(INCDIR)/proto.h \
	$(INCDIR)/stpwatch.h \
	$(INCDIR)/tin.h \
	$(INCDIR)/version.h
#	$(INCDIR)/amiga.h
#	$(INCDIR)/amigatcp.h
#	$(INCDIR)/config.h
#	$(INCDIR)/msmail.h
#	$(INCDIR)/os_2.h
#	$(INCDIR)/win32.h
#	$(INCDIR)/win32tcp.h

CFILES	= \
	$(SRCDIR)/active.c \
	$(SRCDIR)/actived.c \
	$(SRCDIR)/art.c \
	$(SRCDIR)/attrib.c \
	$(SRCDIR)/charset.c \
	$(SRCDIR)/color.c \
	$(SRCDIR)/config.c \
	$(SRCDIR)/curses.c \
	$(SRCDIR)/debug.c \
	$(SRCDIR)/envarg.c \
	$(SRCDIR)/feed.c \
	$(SRCDIR)/filter.c \
	$(SRCDIR)/getline.c \
	$(SRCDIR)/group.c \
	$(SRCDIR)/hashstr.c \
	$(SRCDIR)/help.c \
	$(SRCDIR)/inews.c \
	$(SRCDIR)/init.c \
	$(SRCDIR)/lang.c \
	$(SRCDIR)/list.c \
	$(SRCDIR)/mail.c \
	$(SRCDIR)/main.c \
	$(SRCDIR)/memory.c \
	$(SRCDIR)/misc.c \
	$(SRCDIR)/newsrc.c \
	$(SRCDIR)/nntplib.c \
	$(SRCDIR)/nrctbl.c \
	$(SRCDIR)/open.c \
	$(SRCDIR)/page.c \
	$(SRCDIR)/parsdate.y \
	$(SRCDIR)/pgp.c \
	$(SRCDIR)/post.c \
	$(SRCDIR)/prompt.c \
	$(SRCDIR)/refs.c \
	$(SRCDIR)/rfc1521.c \
	$(SRCDIR)/rfc1522.c \
	$(SRCDIR)/save.c \
	$(SRCDIR)/screen.c \
	$(SRCDIR)/search.c \
	$(SRCDIR)/select.c \
	$(SRCDIR)/sigfile.c \
	$(SRCDIR)/signal.c \
	$(SRCDIR)/strftime.c \
	$(SRCDIR)/thread.c \
	$(SRCDIR)/wildmat.c \
	$(SRCDIR)/xref.c
#	$(SRCDIR)/amiga.c
#	$(SRCDIR)/amigatcp.c
#	$(SRCDIR)/msmail.c
#	$(SRCDIR)/nntpw32.c
#	$(SRCDIR)/win32.c
#	$(SRCDIR)/win32tcp.c
#	$(SRCDIR)/os_2.c
#	$(SRCDIR)/vms.c

OFILES	= @ALLOCA@ \
	$(OBJDIR)/active.o \
	$(OBJDIR)/actived.o \
	$(OBJDIR)/art.o \
	$(OBJDIR)/attrib.o \
	$(OBJDIR)/charset.o \
	$(OBJDIR)/color.o \
	$(OBJDIR)/config.o \
	$(OBJDIR)/curses.o \
	$(OBJDIR)/debug.o \
	$(OBJDIR)/envarg.o \
	$(OBJDIR)/feed.o \
	$(OBJDIR)/filter.o \
	$(OBJDIR)/getline.o \
	$(OBJDIR)/group.o \
	$(OBJDIR)/hashstr.o \
	$(OBJDIR)/help.o \
	$(OBJDIR)/inews.o \
	$(OBJDIR)/init.o \
	$(OBJDIR)/lang.o \
	$(OBJDIR)/list.o \
	$(OBJDIR)/mail.o \
	$(OBJDIR)/main.o \
	$(OBJDIR)/memory.o \
	$(OBJDIR)/misc.o \
	$(OBJDIR)/newsrc.o \
	$(OBJDIR)/nntplib.o \
	$(OBJDIR)/nrctbl.o \
	$(OBJDIR)/open.o \
	$(OBJDIR)/page.o \
	$(OBJDIR)/parsdate.o \
	$(OBJDIR)/pgp.o \
	$(OBJDIR)/post.o \
	$(OBJDIR)/prompt.o \
	$(OBJDIR)/refs.o \
	$(OBJDIR)/rfc1521.o \
	$(OBJDIR)/rfc1522.o \
	$(OBJDIR)/save.o \
	$(OBJDIR)/screen.o \
	$(OBJDIR)/search.o \
	$(OBJDIR)/select.o \
	$(OBJDIR)/sigfile.o \
	$(OBJDIR)/signal.o \
	$(OBJDIR)/strftime.o \
	$(OBJDIR)/thread.o \
	$(OBJDIR)/wildmat.o \
	$(OBJDIR)/xref.o
#	$(OBJDIR)/amiga.o
#	$(OBJDIR)/amigatcp.o
#	$(OBJDIR)/win32.o
#	$(OBJDIR)/vms.o
#	$(OBJDIR)/os_2.o
#	$(OBJDIR)/nntpw32.o


ALL_FILES = $(HFILES) $(CFILES) $(NNTP)

LINTFLAGS=-a -c -h -n -x $(CPPOPTS) \
	-DUSE_ISO2ASC=\"2\" \
	-DHAVE_ISPELL \
	-DHAVE_COLOR

all: $(BINDIR)/$(EXE) 

.SUFFIXES : .i

.c.o:
@SHOW_CC@
	@ECHO_CC@$(CC) $(CPPOPTS) $(CFLAGS) -c $*.c

.c.i:
@SHOW_CC@
	@ECHO_CC@$(CC) -E -C $(CPPOPTS) $*.c >$@

# explicit rule to allow running lint
$(SRCDIR)/parsdate.c: $(SRCDIR)/parsdate.y
	@ echo expect 6 shift/reduce conflicts...
	$(YACC) $(SRCDIR)/parsdate.y
	$(MV) y.tab.c $(SRCDIR)/parsdate.c

actived: actived.c mail.c
	@$(ECHO) "Compiling actived..."
	$(CC) $(CFLAGS) -DACTIVE_DAEMON -DINDEX_DAEMON actived.c mail.c
	$(LD) $(LDFLAGS) actived.o mail.o -o actived $(LIBS)
	@$(LS) actived

$(BINDIR)/$(EXE): $(OFILES)
	@$(ECHO) "Linking $(EXE) v$(VER)..."
	$(LD) $(LDFLAGS) -o $(BINDIR)/$(EXE) $(OFILES) $(NNTPLIB) $(NETLIBS) $(LIBS) $(DEBUG)
	@$(LS) $(BINDIR)/$(EXE)

help:
	@$(ECHO) "This Makefile offers the following options:"
	@$(ECHO) " "
	@$(ECHO) "    make [all]           [ Build the binary for your OS ]"
	@$(ECHO) "    make clean           [ Delete all object files ]"
	@$(ECHO) "    make proto           [ Regenerate ../include/proto.h ]"
	@$(ECHO) "    make install         [ Install the binary & the manual page ]"
	@$(ECHO) "    make install_setuid  [ Install the binary setuid & the manual page ]"
	@$(ECHO) "    make install_daemon  [ Install the index daemon binary ]"
	@$(ECHO) "    make install_manpage [ Install the manual page ]"
	@$(ECHO) "    make help            [ Show this text ]"
	@$(ECHO) " "

install_manpage:
	@$(ECHO) "Installing $(EXE) manual page to $(INS_MANUAL_DIR)$(INS_MANUAL_EXT)..."
	@$(INSTALL) -m 444 $(DOCDIR)/$(EXE).$(MANEXT) $(INS_MANUAL_DIR)$(INS_MANUAL_EXT)/$(EXE).$(INS_MANUAL_EXT)

install:
	@$(MAKE) all
	@$(ECHO) "Installing $(EXE) v$(VER) to $(INS_BINARY_DIR)..."
	@$(INSTALL) -s $(BINDIR)/$(EXE) $(INS_BINARY_DIR)/$(EXE)
	@-$(RM) $(INS_BINARY_DIR)/r$(EXE)
	@$(LN) $(INS_BINARY_DIR)/$(EXE) $(INS_BINARY_DIR)/r$(EXE)
	@$(MAKE) install_manpage

install_setuid:
	@$(MAKE) all
	@$(ECHO) "Installing SETUID $(EXE) v$(VER) to $(INS_BINARY_DIR)..."
	@$(INSTALL) -s -o news -g news -m 6755 $(BINDIR)/$(EXE) $(INS_BINARY_DIR)/$(EXE)
	@-$(RM) $(INS_BINARY_DIR)/r$(EXE)
	@$(LN) $(INS_BINARY_DIR)/$(EXE) $(INS_BINARY_DIR)/r$(EXE)
	@$(MAKE) install_manpage

install_daemon:
	@$(ECHO) "Installing index daemon $(EXED) v$(VER) to $(INS_DAEMON_DIR)..."
	@$(INSTALL) -s -o news -m 0750 $(EXED) $(INS_DAEMON_DIR)/$(EXED)

tags:
	@$(ECHO) "Generating tags (results in ./tags)..."
	@-$(RM) -f tags
	@$(TAGS) $(HFILES) $(CFILES) 

lint:	$(CFILES) $(SRCDIR)/parsdate.c
	@$(ECHO) "Linting source (results in ./LINT)..."
	@$(LINT) $(LINTFLAGS) -DNNTP_ABLE `/bin/ls $(CFILES)|sed -e 's/\.y/.c/'` $(LIBS) > LINT

clean:
	@$(ECHO) "Cleaning..."
	@-$(RM) -f $(OFILES)
	@-$(RM) -f $(SRCDIR)/parsdate.c
	@-$(RM) -f LINT *.ln
	@-$(RM) -f *~
	@-$(RM) -f $(EXE) $(EXED)

distclean \
clobber: clean
	@$(ECHO) "Clobbering..."
	@-$(RM) -f $(OFILES) $(BINDIR)/$(EXE) $(BINDIR)/$(EXED) actived tags 

cflow:
	@$(ECHO) "Creating cflow for $(PROJECT)..."
	@$(CFLOW) -I$(INCDIR) $(CFILES) > cflow.$(PROJECT) &

cscope:
	@$(ECHO) "Creating cscope database $(PROJECT)..."
	@$(CSCOPE) $(ALL_FILES)

proto:
	@$(ECHO) "Generating function prototypes to $(INCDIR)/proto.h..."
	@-$(RM) -f $(INCDIR)/protoold.h $(INCDIR)/protonew.h
	@-$(CP) $(INCDIR)/proto.h $(INCDIR)/protoold.h
	@$(CPROTO) $(CPROTO_OPTS) $(CFILES) | sed -f proto.sed > $(INCDIR)/protonew.h
	@-$(CHMOD) 0644 $(INCDIR)/proto.h
	@-$(MV) $(INCDIR)/protonew.h $(INCDIR)/proto.h
	@$(LS) $(INCDIR)/proto.h

TIN_DEP	= \
	$(SRCDIR)/Makefile \
	$(INCDIR)/tin.h \
	$(INCDIR)/autoconf.h \
	$(INCDIR)/extern.h \
	$(INCDIR)/nntplib.h \
	$(INCDIR)/proto.h

$(OBJDIR)/active.o:		$(SRCDIR)/active.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/actived.o:		$(SRCDIR)/actived.c $(TIN_DEP)
$(OBJDIR)/art.o:		$(SRCDIR)/art.c $(TIN_DEP) \
				$(INCDIR)/stpwatch.h
$(OBJDIR)/attrib.o:		$(SRCDIR)/attrib.c $(TIN_DEP)
$(OBJDIR)/charset.o:		$(SRCDIR)/charset.c $(TIN_DEP)
$(OBJDIR)/color.o:		$(SRCDIR)/color.c $(TIN_DEP)
$(OBJDIR)/config.o:		$(SRCDIR)/config.c $(TIN_DEP) \
				$(INCDIR)/conf.h \
				$(INCDIR)/menukeys.h \
				$(INCDIR)/version.h
$(OBJDIR)/curses.o:		$(SRCDIR)/curses.c $(TIN_DEP)
$(OBJDIR)/debug.o:		$(SRCDIR)/debug.c $(TIN_DEP)
$(OBJDIR)/envarg.o:		$(SRCDIR)/envarg.c $(TIN_DEP)
$(OBJDIR)/feed.o:		$(SRCDIR)/feed.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/filter.o:		$(SRCDIR)/filter.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/getline.o:		$(SRCDIR)/getline.c $(TIN_DEP)
$(OBJDIR)/group.o:		$(SRCDIR)/group.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/hashstr.o:		$(SRCDIR)/hashstr.c $(TIN_DEP)
$(OBJDIR)/help.o:		$(SRCDIR)/help.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/inews.o:		$(SRCDIR)/inews.c $(TIN_DEP)
$(OBJDIR)/init.o:		$(SRCDIR)/init.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h \
				$(INCDIR)/version.h
$(OBJDIR)/lang.o:		$(SRCDIR)/lang.c $(TIN_DEP)
$(OBJDIR)/list.o:		$(SRCDIR)/list.c $(TIN_DEP)
$(OBJDIR)/mail.o:		$(SRCDIR)/mail.c $(TIN_DEP)
$(OBJDIR)/main.o:		$(SRCDIR)/main.c $(TIN_DEP) \
				$(INCDIR)/version.h
$(OBJDIR)/memory.o:		$(SRCDIR)/memory.c $(TIN_DEP)
$(OBJDIR)/misc.o:		$(SRCDIR)/misc.c $(TIN_DEP) \
				$(INCDIR)/version.h
$(OBJDIR)/newsrc.o:		$(SRCDIR)/newsrc.c $(TIN_DEP)
$(OBJDIR)/nntplib.o:		$(SRCDIR)/nntplib.c $(TIN_DEP)
$(OBJDIR)/nrctbl.o:		$(SRCDIR)/nrctbl.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h \
				$(INCDIR)/version.h
$(OBJDIR)/open.o:		$(SRCDIR)/open.c $(TIN_DEP) \
				$(INCDIR)/version.h
$(OBJDIR)/page.o:		$(SRCDIR)/page.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/parsdate.o:		$(SRCDIR)/parsdate.y $(TIN_DEP)
$(OBJDIR)/pgp.o:		$(SRCDIR)/pgp.c $(TIN_DEP)
$(OBJDIR)/post.o:		$(SRCDIR)/post.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h \
				$(INCDIR)/version.h
$(OBJDIR)/prompt.o:		$(SRCDIR)/prompt.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/refs.o:		$(SRCDIR)/refs.c $(TIN_DEP)
$(OBJDIR)/rfc1521.o:		$(SRCDIR)/rfc1521.c $(TIN_DEP)
$(OBJDIR)/rfc1522.o:		$(SRCDIR)/rfc1522.c $(TIN_DEP)
$(OBJDIR)/save.o:		$(SRCDIR)/save.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/screen.o:		$(SRCDIR)/screen.c $(TIN_DEP)
$(OBJDIR)/search.o:		$(SRCDIR)/search.c $(TIN_DEP)
$(OBJDIR)/select.o:		$(SRCDIR)/select.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/sigfile.o:		$(SRCDIR)/sigfile.c $(TIN_DEP)
$(OBJDIR)/signal.o:		$(SRCDIR)/signal.c $(TIN_DEP)
$(OBJDIR)/strftime.o:		$(SRCDIR)/strftime.c $(TIN_DEP)
$(OBJDIR)/thread.o:		$(SRCDIR)/thread.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/wildmat.o:		$(SRCDIR)/wildmat.c $(TIN_DEP)
$(OBJDIR)/xref.o:		$(SRCDIR)/xref.c $(TIN_DEP)

# $(OBJDIR)/msmail.o:		$(SRCDIR)/msmail.c $(TIN_DEP)
# $(OBJDIR)/win32.o:		$(SRCDIR)/win32.c $(TIN_DEP)
# $(OBJDIR)/vms.o:		$(SRCDIR)/vms.c $(TIN_DEP)
